version: '3'

services:
  ##################
  #                #
  # Kafka Services #
  #                #
  ##################
  kafka:
    image: bitnami/kafka
    networks:
      - microshop_network
    restart: unless-stopped
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
  
  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - microshop_network
    environment:
      - KAFKA_CLUSTERS_0_NAME=Microshop
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka

  #####################
  #                   #
  # Postgres Services #
  #                   #
  #####################
  postgres:
    build:
      context: .
      dockerfile: ./Dockerfile.pg
    networks:
      - microshop_network
    restart: unless-stopped
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      - POSTGRES_DATABASES=${POSTGRES_DATABASES}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  adminer:
    image: adminer
    restart: unless-stopped
    networks:
      - microshop_network
    ports:
      - 8081:8080

networks:
  microshop_network: